(* FFmpeg DSL Grammar - Instaparse BNF Format *)
(* Fixed whitespace handling for proper parsing *)

<program> = <whitespace>? expression (<whitespace>+ expression)* <whitespace>?

expression = let-binding | conditional | input-ref | function-call  | literal | symbol

(* Let bindings for variable definitions *)
let-binding = <'('> <whitespace>? <'let'> <whitespace>+ <'['> <whitespace>? 
              bindings <whitespace>? <']'> <whitespace>+ 
              expression <whitespace>? <')'>
	      
bindings = symbol <whitespace>+ expression (<whitespace>+ symbol <whitespace>+ expression)*

binding = <'['> <whitespace>? symbol <whitespace>+ expression <whitespace>? <']'>

(* Conditional expressions for adaptive processing *)
conditional = <'('> <whitespace>? <'if'> <whitespace>+ expression <whitespace>+ 
              expression <whitespace>+ expression <whitespace>? <')'>

(* Function calls - the main processing operations *)
function-call = !let-binding !conditional !input-ref <'('> <whitespace>? symbol (<whitespace>+ expression)* <whitespace>? <')'>

(* Input file references - specifically for (input "filename") *)
input-ref = <'('> <whitespace>? <'input'> <whitespace>+ string <whitespace>? <')'>

(* Literal values *)
<literal> = number | keyword | string | vector

vector = <'['> <whitespace>? (expression (<whitespace>+ expression)*)? <whitespace>? <']'>

number = #'[0-9]+\.?[0-9]*'

keyword = <':'> #'[a-zA-Z0-9-]+'

(* General string literals - can be empty, used for text, parameters, etc. *)
string = <'"'> #'[^"]*' <'"'>

(* Symbols for operations and variables *)
symbol =  #'[a-zA-Z_$][a-zA-Z0-9_$]*'

(* Comments - line comments starting with semicolon *)
comment = <';'> #'[^\r\n]*'

(* Whitespace includes spaces, tabs, newlines, and comments *)
whitespace = #'\s+' | comment

