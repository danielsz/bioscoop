program = expression*

<expression> = atom | list | let-binding

let-binding = <'('> <'let'> binding-vector expression+ <')'>
<binding-vector> = <'['> binding* <']'>
binding = symbol expression

list = <'('> (symbol | keyword) expression* <')'>

<atom> = number | string | symbol | keyword | boolean

number = #'-?\d+(\.\d+)?'
string = <'"'> #'[^"]*' <'"'>
symbol = #'[a-zA-Z_][a-zA-Z0-9_\-]*[?!]?'
keyword = <':'> symbol
boolean = 'true' | 'false'
